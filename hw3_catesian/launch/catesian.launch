<launch>
    <arg name="arm_id" default="panda" />
    <arg name="moveit_controller_manager" default="fake" />
    <arg name="use_gui" default="false" />
    <arg name="use_rviz" default="true" />

    <!-- Starting rviz node -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="virtual_joint_broadcaster_0" args="0 0 0 0 0 0 world $(arg arm_id)_link0" />

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" unless="$(arg use_gui)">
        <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
    </node>

    <node name="joint_state_publisher" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" if="$(arg use_gui)">
        <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />
  
    <include file="$(find panda_moveit_config)/launch/move_group.launch" pass_all_args="true">
        <arg name="allow_trajectory_execution" value="true" />
        <arg name="info" value="true" />
    </include>

    <include file="$(find panda_moveit_config)/launch/moveit_rviz.launch" if="$(arg use_rviz)">
        <arg name="rviz_config" value="$(find hw3_catesian)/config/rviz.rviz"/>
    </include>

    <!-- start catesian node -->
    <node pkg="hw3_catesian" type="catesian.py" name="catesian_node" output="screen" respawn="true"/>

</launch>